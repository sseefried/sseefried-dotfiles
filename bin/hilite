#!/usr/bin/env ruby

TXTBLK="\e[0;30m" # Black - Regular
TXTRED="\e[0;31m" # Red
TXTGRN="\e[0;32m" # Green
TXTYLW="\e[0;33m" # Yellow
TXTBLU="\e[0;34m" # Blue
TXTPUR="\e[0;35m" # Purple
TXTCYN="\e[0;36m" # Cyan
TXTWHT="\e[0;37m" # White
BLDBLK="\e[1;30m" # Black - Bold
BLDRED="\e[1;31m" # Red
BLDGRN="\e[1;32m" # Green
BLDYLW="\e[1;33m" # Yellow
BLDBLU="\e[1;34m" # Blue
BLDPUR="\e[1;35m" # Purple
BLDCYN="\e[1;36m" # Cyan
BLDWHT="\e[1;37m" # White
UNKBLK="\e[4;30m" # Black - Underline
UNDRED="\e[4;31m" # Red
UNDGRN="\e[4;32m" # Green
UNDYLW="\e[4;33m" # Yellow
UNDBLU="\e[4;34m" # Blue
UNDPUR="\e[4;35m" # Purple
UNDCYN="\e[4;36m" # Cyan
UNDWHT="\e[4;37m" # White
BAKBLK="\e[40m"   # Black - Background
BAKRED="\e[41m"   # Red
BADGRN="\e[42m"   # Green
BAKYLW="\e[43m"   # Yellow
BAKBLU="\e[44m"   # Blue
BAKPUR="\e[45m"   # Purple
BAKCYN="\e[46m"   # Cyan
BAKWHT="\e[47m"   # White
TXTRST="\e[0m"    # Text Reset

def strip_ascii_escapes(str)
  str.gsub(/\e\[[^m]*m/, "")
end

def highlight(ln)
  unless ARGV[1].nil?
    stripped = strip_ascii_escapes(ln)
    re = Regexp.new(ARGV[1])
    if m = re.match(stripped)
      hilited = stripped.gsub(m[0], "#{BLDBLU}#{m[0]}#{TXTRST}#{BAKYLW}")
      puts "#{BAKYLW}#{hilited}#{TXTRST}"
    else  
      puts ln
    end
  else
     puts ln
  end
    STDOUT.flush
end


if ARGV.length < 1
  name = File.basename($0)
  puts "#{name}, a replacement for `tail -f'"
  puts "Usage: #{name} <file> <regexp>"
  exit 1
end

File.open(ARGV[0], File::RDONLY) do |f|
  f.seek(0, IO::SEEK_END)
  while true
    ln = f.gets
    if ln
      highlight ln
    else
      sleep 0.1
    end
  end
end
